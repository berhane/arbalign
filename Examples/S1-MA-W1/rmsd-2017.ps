%!PS-Adobe-2.0
%%Title: rmsd-2017.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Apr 21 22:36:31 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rmsd-2017.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Berhane Temelso)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr 21 22:36:31 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
880 735 M
6000 0 V
stroke
LTb
880 735 M
63 0 V
5937 0 R
-63 0 V
stroke
784 735 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
880 1558 M
6000 0 V
stroke
LTb
880 1558 M
63 0 V
5937 0 R
-63 0 V
stroke
784 1558 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.5)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
880 2380 M
6000 0 V
stroke
LTb
880 2380 M
63 0 V
5937 0 R
-63 0 V
stroke
784 2380 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
880 3203 M
6000 0 V
stroke
LTb
880 3203 M
63 0 V
5937 0 R
-63 0 V
stroke
784 3203 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1.5)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
880 4025 M
96 0 V
2847 0 R
3057 0 V
stroke
LTb
880 4025 M
63 0 V
5937 0 R
-63 0 V
stroke
784 4025 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
880 4848 M
6000 0 V
stroke
LTb
880 4848 M
63 0 V
5937 0 R
-63 0 V
stroke
784 4848 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2.5)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
880 735 M
0 4113 V
stroke
LTb
880 735 M
0 -63 V
0 4176 R
0 63 V
stroke
880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (2)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1213 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
1213 735 M
0 -63 V
0 4176 R
0 63 V
stroke
1213 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (3)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1547 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
1547 735 M
0 -63 V
0 4176 R
0 63 V
stroke
1547 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (4)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1880 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
1880 735 M
0 -63 V
0 4176 R
0 63 V
stroke
1880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (5)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2213 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
2213 735 M
0 -63 V
0 4176 R
0 63 V
stroke
2213 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (6)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2547 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
2547 735 M
0 -63 V
0 4176 R
0 63 V
stroke
2547 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (7)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2880 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
2880 735 M
0 -63 V
0 4176 R
0 63 V
stroke
2880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (8)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3213 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
3213 735 M
0 -63 V
0 4176 R
0 63 V
stroke
3213 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (9)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3547 735 M
0 2930 V
0 1120 R
0 63 V
stroke
LTb
3547 735 M
0 -63 V
0 4176 R
0 63 V
stroke
3547 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (10)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3880 735 M
0 4113 V
stroke
LTb
3880 735 M
0 -63 V
0 4176 R
0 63 V
stroke
3880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (11)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4213 735 M
0 4113 V
stroke
LTb
4213 735 M
0 -63 V
0 4176 R
0 63 V
stroke
4213 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (12)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4547 735 M
0 4113 V
stroke
LTb
4547 735 M
0 -63 V
0 4176 R
0 63 V
stroke
4547 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (13)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4880 735 M
0 4113 V
stroke
LTb
4880 735 M
0 -63 V
0 4176 R
0 63 V
stroke
4880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (14)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
5213 735 M
0 4113 V
stroke
LTb
5213 735 M
0 -63 V
0 4176 R
0 63 V
stroke
5213 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (15)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
5547 735 M
0 4113 V
stroke
LTb
5547 735 M
0 -63 V
0 4176 R
0 63 V
stroke
5547 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (16)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
5880 735 M
0 4113 V
stroke
LTb
5880 735 M
0 -63 V
0 4176 R
0 63 V
stroke
5880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (17)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
6213 735 M
0 4113 V
stroke
LTb
6213 735 M
0 -63 V
0 4176 R
0 63 V
stroke
6213 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (18)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
6547 735 M
0 4113 V
stroke
LTb
6547 735 M
0 -63 V
0 4176 R
0 63 V
stroke
6547 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (19)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
6880 735 M
0 4113 V
stroke
LTb
6880 735 M
0 -63 V
0 4176 R
0 63 V
stroke
6880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (20)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
880 4848 N
880 735 L
6000 0 V
0 4113 V
-6000 0 V
Z stroke
LCb setrgbcolor
320 2791 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (RMSD \(Angs\))]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3880 272 M
[ [(Helvetica) 160.0 0.0 true true 0 (Different isomers of H)]
[(Helvetica) 128.0 -48.0 true true 0 (2)]
[(Helvetica) 160.0 0.0 true true 0 (SO)]
[(Helvetica) 128.0 -48.0 true true 0 (4)]
[(Helvetica) 160.0 0.0 true true 0 (*NH)]
[(Helvetica) 128.0 -48.0 true true 0 (2)]
[(Helvetica) 160.0 0.0 true true 0 (CH)]
[(Helvetica) 128.0 -48.0 true true 0 (3)]
[(Helvetica) 160.0 0.0 true true 0 (*H)]
[(Helvetica) 128.0 -48.0 true true 0 (2)]
[(Helvetica) 160.0 0.0 true true 0 (O)]
] -37.3 MCshow
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
2.000 UP
2.000 UL
LTb
1615 4585 M
[ [(Helvetica) 160.0 0.0 true true 0 (RMSD\(Conventional\))]
] -53.3 MLshow
1072 4585 M
447 0 V
880 4045 M
1213 2601 L
334 701 V
333 -162 V
333 597 V
334 -34 V
333 -462 V
333 -71 V
334 10 V
333 -446 V
333 -341 V
334 973 V
333 299 V
5213 1541 L
334 1046 V
333 1210 V
333 -208 V
334 -222 V
333 757 V
880 4045 Pnt
1213 2601 Pnt
1547 3302 Pnt
1880 3140 Pnt
2213 3737 Pnt
2547 3703 Pnt
2880 3241 Pnt
3213 3170 Pnt
3547 3180 Pnt
3880 2734 Pnt
4213 2393 Pnt
4547 3366 Pnt
4880 3665 Pnt
5213 1541 Pnt
5547 2587 Pnt
5880 3797 Pnt
6213 3589 Pnt
6547 3367 Pnt
6880 4124 Pnt
1296 4585 Pnt
2.000 UP
2.000 UL
LT0
LTb
1615 4345 M
[ [(Helvetica) 160.0 0.0 true true 0 (RMSD\(KM-ByAtomName\))]
] -53.3 MLshow
LT0
1072 4345 M
447 0 V
880 2543 M
333 58 V
1547 924 L
333 1344 V
333 -169 V
334 -448 V
333 270 V
333 137 V
334 -635 V
333 1311 V
333 -341 V
334 237 V
333 -990 V
333 -99 V
334 1046 V
333 588 V
333 -648 V
334 -186 V
333 -344 V
880 2543 Pls
1213 2601 Pls
1547 924 Pls
1880 2268 Pls
2213 2099 Pls
2547 1651 Pls
2880 1921 Pls
3213 2058 Pls
3547 1423 Pls
3880 2734 Pls
4213 2393 Pls
4547 2630 Pls
4880 1640 Pls
5213 1541 Pls
5547 2587 Pls
5880 3175 Pls
6213 2527 Pls
6547 2341 Pls
6880 1997 Pls
1296 4345 Pls
2.000 UP
2.000 UL
LT3
LTb
1615 4105 M
[ [(Helvetica) 160.0 0.0 true true 0 (RMSD\(KM-ByAtomType\))]
] -53.3 MLshow
LT3
1072 4105 M
447 0 V
880 2938 M
333 -459 V
334 -295 V
333 283 V
333 -368 V
334 337 V
333 112 V
333 -490 V
334 243 V
333 433 V
333 -341 V
334 473 V
333 -696 V
333 -629 V
334 1046 V
333 774 V
333 -568 V
334 133 V
333 -83 V
880 2938 Box
1213 2479 Box
1547 2184 Box
1880 2467 Box
2213 2099 Box
2547 2436 Box
2880 2548 Box
3213 2058 Box
3547 2301 Box
3880 2734 Box
4213 2393 Box
4547 2866 Box
4880 2170 Box
5213 1541 Box
5547 2587 Box
5880 3361 Box
6213 2793 Box
6547 2926 Box
6880 2843 Box
1296 4105 Box
2.000 UP
2.000 UL
LT2
LTb
1615 3865 M
[ [(Helvetica) 160.0 0.0 true true 0 (RMSD\(KM-ByConnectivity\))]
] -53.3 MLshow
LT2
1072 3865 M
447 0 V
880 2517 M
333 -821 V
1547 924 L
333 711 V
333 638 V
334 152 V
333 16 V
333 -173 V
334 -845 V
333 238 V
333 -15 V
334 696 V
333 -702 V
333 -99 V
334 -130 V
333 1200 V
333 62 V
334 123 V
333 -444 V
880 2517 BoxF
1213 1696 BoxF
1547 924 BoxF
1880 1635 BoxF
2213 2273 BoxF
2547 2425 BoxF
2880 2441 BoxF
3213 2268 BoxF
3547 1423 BoxF
3880 1661 BoxF
4213 1646 BoxF
4547 2342 BoxF
4880 1640 BoxF
5213 1541 BoxF
5547 1411 BoxF
5880 2611 BoxF
6213 2673 BoxF
6547 2796 BoxF
6880 2352 BoxF
1296 3865 BoxF
1.000 UL
LTb
880 4848 N
880 735 L
6000 0 V
0 4113 V
-6000 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
